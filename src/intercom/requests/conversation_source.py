# This file was auto-generated by Fern from our API Definition.

import typing

import typing_extensions
from ..types.conversation_source_type import ConversationSourceType
from .conversation_part_author import ConversationPartAuthorParams
from .part_attachment import PartAttachmentParams


class ConversationSourceParams(typing_extensions.TypedDict):
    """
    The Conversation Part that originated this conversation, which can be Contact, Admin, Campaign, Automated or Operator initiated.
    """

    type: ConversationSourceType
    """
    This includes conversation, email, facebook, instagram, phone_call, phone_switch, push, sms, twitter and whatsapp.
    """

    id: str
    """
    The id representing the message.
    """

    delivered_as: str
    """
    The conversation's initiation type. Possible values are customer_initiated, campaigns_initiated (legacy campaigns), operator_initiated (Custom bot), automated (Series and other outbounds with dynamic audience message) and admin_initiated (fixed audience message, ticket initiated by an admin, group email).
    """

    subject: str
    """
    Optional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.
    """

    body: typing_extensions.NotRequired[str]
    """
    The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.
    """

    author: ConversationPartAuthorParams
    attachments: typing_extensions.NotRequired[typing.Sequence[PartAttachmentParams]]
    """
    A list of attachments for the part.
    """

    url: typing_extensions.NotRequired[str]
    """
    The URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.
    """

    redacted: bool
    """
    Whether or not the source message has been redacted. Only applicable for contact initiated messages.
    """
