# This file was auto-generated by Fern from our API Definition.

import typing_extensions
from ..types.input_component_save_state import InputComponentSaveState
from .action_component import ActionComponentParams


class InputComponentParams(typing_extensions.TypedDict):
    """
    An input component is used to capture text input from the end user. You can submit the value of the input by:

    - Adding an `action` to the input component (which will render an inline button)
    - Using a ButtonComponent (which will submit all interactive components in the canvas)
    """

    id: str
    """
    A unique identifier for the component.
    """

    label: typing_extensions.NotRequired[str]
    """
    The text shown above the input.
    """

    placeholder: typing_extensions.NotRequired[str]
    """
    An example value shown inside the component when it's empty.
    """

    value: typing_extensions.NotRequired[str]
    """
    An entered value which is already inside the component.
    """

    action: typing_extensions.NotRequired[ActionComponentParams]
    """
    This can be a Submit Action, URL Action, or Sheets Action.
    """

    save_state: typing_extensions.NotRequired[InputComponentSaveState]
    """
    Styles the input. Default is `unsaved`. Prevent action with `saved`.
    """

    disabled: typing_extensions.NotRequired[bool]
    """
    Styles the input and prevents the action. Default is false. Will be overridden if save_state is saved.
    """
