# This file was auto-generated by Fern from our API Definition.

import typing

import typing_extensions
from ..types.single_select_component_save_state import SingleSelectComponentSaveState
from .action_component import ActionComponentParams
from .single_select_option import SingleSelectOptionParams


class SingleSelectComponentParams(typing_extensions.TypedDict):
    """
    A single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:

    - Adding an `action` to the single-select component
    - Using a ButtonComponent (which will submit all interactive components in the canvas)

    When a submit action takes place, the results are given in a hash with the `id` from the single-select component used as the key and the `id` from the chosen option as the value.
    """

    id: str
    """
    A unique identifier for the component.
    """

    options: typing.Sequence[SingleSelectOptionParams]
    """
    The list of options. Can provide 2 to 10.
    """

    label: typing_extensions.NotRequired[str]
    """
    The text shown above the options.
    """

    value: typing_extensions.NotRequired[str]
    """
    The option that is selected by default.
    """

    save_state: typing_extensions.NotRequired[SingleSelectComponentSaveState]
    """
    Styles the input. Default is `unsaved`. Prevent action with `saved`.
    """

    disabled: typing_extensions.NotRequired[bool]
    """
    Styles all options and prevents the action. Default is false. Will be overridden if save_state is saved.
    """

    action: typing_extensions.NotRequired[ActionComponentParams]
    """
    This can be a Submit Action, URL Action, or Sheets Action.
    """
