# This file was auto-generated by Fern from our API Definition.

import typing

import typing_extensions
from .conversation_part_author import ConversationPartAuthorParams
from .part_attachment import PartAttachmentParams
from .reference import ReferenceParams


class ConversationPartParams(typing_extensions.TypedDict):
    """
    A Conversation Part represents a message in the conversation.
    """

    type: typing.Literal["conversation_part"]
    """
    Always conversation_part
    """

    id: str
    """
    The id representing the conversation part.
    """

    part_type: str
    """
    The type of conversation part.
    """

    body: typing_extensions.NotRequired[str]
    """
    The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.
    """

    created_at: int
    """
    The time the conversation part was created.
    """

    updated_at: typing_extensions.NotRequired[int]
    """
    The last time the conversation part was updated.
    """

    notified_at: int
    """
    The time the user was notified with the conversation part.
    """

    assigned_to: typing_extensions.NotRequired[ReferenceParams]
    """
    The id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)
    """

    author: ConversationPartAuthorParams
    attachments: typing_extensions.NotRequired[typing.Sequence[PartAttachmentParams]]
    """
    A list of attachments for the part.
    """

    external_id: typing_extensions.NotRequired[str]
    """
    The external id of the conversation part
    """

    redacted: bool
    """
    Whether or not the conversation part has been redacted.
    """
