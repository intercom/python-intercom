# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.unchecked_base_model import UncheckedBaseModel
from .ticket_state import TicketState


class TicketTypeTicketStates(UncheckedBaseModel):
    """
    A list of ticket states associated with a given ticket type.
    """

    type: typing.Optional[str] = pydantic.Field(default=None)
    """
    String representing the object's type. Always has the value `list`.
    """

    data: typing.Optional[typing.List[typing.Optional[TicketState]]] = pydantic.Field(default=None)
    """
    A list of ticket states associated with a given ticket type.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
