# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel


class ErrorErrorsItem(UncheckedBaseModel):
    code: str = pydantic.Field()
    """
    A string indicating the kind of error, used to further qualify the HTTP response code
    """

    message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional. Human readable description of the error.
    """

    field: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional. Used to identify a particular field or query parameter that was in error.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
