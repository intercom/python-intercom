# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from ..contacts.types.contact import Contact
from .cursor_pages import CursorPages


class CompanyAttachedContacts(UncheckedBaseModel):
    """
    A list of Contact Objects
    """

    type: typing.Optional[typing.Literal["list"]] = pydantic.Field(default=None)
    """
    The type of object - `list`
    """

    data: typing.Optional[typing.List[Contact]] = pydantic.Field(default=None)
    """
    An array containing Contact Objects
    """

    total_count: typing.Optional[int] = pydantic.Field(default=None)
    """
    The total number of contacts
    """

    pages: typing.Optional[CursorPages] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
