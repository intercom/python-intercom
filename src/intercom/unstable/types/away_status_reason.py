# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel


class AwayStatusReason(UncheckedBaseModel):
    type: typing.Optional[str] = None
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier for the away status reason
    """

    label: typing.Optional[str] = pydantic.Field(default=None)
    """
    The display text for the away status reason
    """

    emoji: typing.Optional[str] = pydantic.Field(default=None)
    """
    The emoji associated with the status reason
    """

    order: typing.Optional[int] = pydantic.Field(default=None)
    """
    The display order of the status reason
    """

    deleted: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the status reason has been soft deleted
    """

    created_at: typing.Optional[int] = pydantic.Field(default=None)
    """
    The Unix timestamp when the status reason was created
    """

    updated_at: typing.Optional[int] = pydantic.Field(default=None)
    """
    The Unix timestamp when the status reason was last updated
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
