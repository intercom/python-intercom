# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from .contact_reply_base_request import ContactReplyBaseRequest
from .conversation_attachment_files import ConversationAttachmentFiles


class ContactReplyUserIdRequest(ContactReplyBaseRequest):
    """
    Payload of the request to reply on behalf of a contact using their `user_id`
    """

    user_id: str = pydantic.Field()
    """
    The external_id you have defined for the contact.
    """

    attachment_files: typing.Optional[typing.List[ConversationAttachmentFiles]] = pydantic.Field(default=None)
    """
    A list of files that will be added as attachments. You can include up to 10 files.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
