# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.unchecked_base_model import UncheckedBaseModel
from ...types.cursor_pages import CursorPages
from .article_search_response_data import ArticleSearchResponseData


class ArticleSearchResponse(UncheckedBaseModel):
    """
    The results of an Article search
    """

    type: typing.Optional[typing.Literal["list"]] = pydantic.Field(default=None)
    """
    The type of the object - `list`.
    """

    total_count: typing.Optional[int] = pydantic.Field(default=None)
    """
    The total number of Articles matching the search query
    """

    data: typing.Optional[ArticleSearchResponseData] = pydantic.Field(default=None)
    """
    An object containing the results of the search.
    """

    pages: typing.Optional[CursorPages] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
