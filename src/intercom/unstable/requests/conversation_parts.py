# This file was auto-generated by Fern from our API Definition.

import typing

import typing_extensions
from .conversation_part import ConversationPartParams


class ConversationPartsParams(typing_extensions.TypedDict):
    """
    A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.
    """

    type: typing_extensions.NotRequired[typing.Literal["conversation_part.list"]]
    """
    
    """

    conversation_parts: typing_extensions.NotRequired[typing.Sequence[ConversationPartParams]]
    """
    A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.
    """

    total_count: typing_extensions.NotRequired[int]
    """
    
    """
