# This file was auto-generated by Fern from our API Definition.

import typing

import typing_extensions
from ...requests.translation import TranslationParams
from ..types.subscription_type_consent_type import SubscriptionTypeConsentType
from ..types.subscription_type_content_types_item import SubscriptionTypeContentTypesItem
from ..types.subscription_type_state import SubscriptionTypeState


class SubscriptionTypeParams(typing_extensions.TypedDict):
    """
    A subscription type lets customers easily opt out of non-essential communications without missing what's important to them.
    """

    type: typing.Literal["subscription"]
    """
    The type of the object - subscription
    """

    id: str
    """
    The unique identifier representing the subscription type.
    """

    state: SubscriptionTypeState
    """
    The state of the subscription type.
    """

    default_translation: TranslationParams
    translations: typing.Sequence[TranslationParams]
    """
    An array of translations objects with the localised version of the subscription type in each available locale within your translation settings.
    """

    consent_type: SubscriptionTypeConsentType
    """
    Describes the type of consent.
    """

    content_types: typing.Sequence[SubscriptionTypeContentTypesItem]
    """
    The message types that this subscription supports - can contain `email` or `sms_message`.
    """
