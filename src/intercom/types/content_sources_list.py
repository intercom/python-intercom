# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..ai_content_source.types.content_source import ContentSource
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class ContentSourcesList(UncheckedBaseModel):
    type: typing.Literal["content_source.list"] = "content_source.list"
    total_count: int = pydantic.Field()
    """
    The total number of content sources used by AI Agent in the conversation.
    """

    content_sources: typing.List[ContentSource] = pydantic.Field()
    """
    The content sources used by AI Agent in the conversation.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
