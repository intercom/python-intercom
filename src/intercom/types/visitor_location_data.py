# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class VisitorLocationData(UncheckedBaseModel):
    type: typing.Optional[str] = pydantic.Field(default=None)
    """
    
    """

    city_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The city name of the visitor.
    """

    continent_code: typing.Optional[str] = pydantic.Field(default=None)
    """
    The continent code of the visitor.
    """

    country_code: typing.Optional[str] = pydantic.Field(default=None)
    """
    The country code of the visitor.
    """

    country_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The country name of the visitor.
    """

    postal_code: typing.Optional[str] = pydantic.Field(default=None)
    """
    The postal code of the visitor.
    """

    region_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The region name of the visitor.
    """

    timezone: typing.Optional[str] = pydantic.Field(default=None)
    """
    The timezone of the visitor.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
