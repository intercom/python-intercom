# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..admins.types.admin import Admin
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class AdminList(UncheckedBaseModel):
    """
    A list of admins associated with a given workspace.
    """

    type: typing.Literal["admin.list"] = pydantic.Field(default="admin.list")
    """
    String representing the object's type. Always has the value `admin.list`.
    """

    admins: typing.List[Admin] = pydantic.Field()
    """
    A list of admins associated with a given workspace.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
